import tkinter as tk
from PIL import ImageTk, Image
import os

BASE_DIR = os.path.dirname(os.path.abspath(__file__))

def update_image():
    """현재 인덱스에 해당하는 이미지를 화면에 표시"""
    global current_index

    image_path = os.path.join(BASE_DIR, images[current_index])  # 이미지 경로 결합
    image = Image.open(image_path)                              # 이미지 파일 열기
    image = image.resize((400, 300))                            # 크기 조정

    photo = ImageTk.PhotoImage(image)                           # Tkinter용 이미지 객체로 변환
    image_label.config(image=photo)                             # Label에 이미지 적용
    image_label.image = photo                                   # 가비지 컬렉션 방지용 참조 유지

def next_image():
    """다음 이미지로 이동"""
    global current_index
    current_index = (current_index + 1) % len(images)           # 인덱스를 1 증가 (순환)
    update_image()

def prev_image():
    """이전 이미지로 이동"""
    global current_index
    current_index = (current_index - 1) % len(images)           # 인덱스를 1 감소 (순환)
    update_image()

root = tk.Tk()
root.title("이미지 슬라이더")

# 표시할 이미지 파일 목록
images = ['image1.png', 'image2.png', 'image3.png', 'image4.png']
current_index = 0  # 현재 표시 중인 이미지의 인덱스

# 이미지를 표시할 Label 위젯
image_label = tk.Label(root)
image_label.pack()

# 버튼들을 담을 Frame
button_frame = tk.Frame(root)
button_frame.pack(pady=10)

# '이전' 버튼
prev_button = tk.Button(button_frame, text="◀ 이전", command=prev_image)
prev_button.grid(row=0, column=0, padx=10)

# '다음' 버튼
next_button = tk.Button(button_frame, text="다음 ▶", command=next_image)
next_button.grid(row=0, column=1, padx=10)

# 처음 프로그램 실행 시 첫 이미지 표시
update_image()

root.mainloop()
